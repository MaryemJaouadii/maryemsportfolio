{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/maryem/Desktop/test/maryemsportfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/maryem/Desktop/test/maryemsportfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanvasUtils = exports.drawPlugin = exports.drawShapeAfterEffect = exports.drawShape = exports.drawParticle = exports.drawParticleShadow = exports.drawLight = exports.drawGrabLine = exports.gradient = exports.drawConnectLine = exports.drawLinkTriangle = exports.drawLinkLine = exports.clear = exports.paintBase = void 0;\n\nvar NumberUtils_1 = require(\"./NumberUtils\");\n\nvar ColorUtils_1 = require(\"./ColorUtils\");\n\nfunction drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\n\nfunction drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\n\nfunction _paintBase(context, dimension, baseColor) {\n  context.save();\n  context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n  context.restore();\n}\n\nexports.paintBase = _paintBase;\n\nfunction _clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\n\nexports.clear = _clear;\n\nfunction _drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n  var drawn = false;\n\n  if (NumberUtils_1.getDistance(begin, end) <= maxDistance) {\n    drawLine(context, begin, end);\n    drawn = true;\n  } else if (warp) {\n    var pi1;\n    var pi2;\n    var endNE = {\n      x: end.x - canvasSize.width,\n      y: end.y\n    };\n    var d1 = NumberUtils_1.getDistances(begin, endNE);\n\n    if (d1.distance <= maxDistance) {\n      var yi = begin.y - d1.dy / d1.dx * begin.x;\n      pi1 = {\n        x: 0,\n        y: yi\n      };\n      pi2 = {\n        x: canvasSize.width,\n        y: yi\n      };\n    } else {\n      var endSW = {\n        x: end.x,\n        y: end.y - canvasSize.height\n      };\n      var d2 = NumberUtils_1.getDistances(begin, endSW);\n\n      if (d2.distance <= maxDistance) {\n        var _yi = begin.y - d2.dy / d2.dx * begin.x;\n\n        var xi = -_yi / (d2.dy / d2.dx);\n        pi1 = {\n          x: xi,\n          y: 0\n        };\n        pi2 = {\n          x: xi,\n          y: canvasSize.height\n        };\n      } else {\n        var endSE = {\n          x: end.x - canvasSize.width,\n          y: end.y - canvasSize.height\n        };\n        var d3 = NumberUtils_1.getDistances(begin, endSE);\n\n        if (d3.distance <= maxDistance) {\n          var _yi2 = begin.y - d3.dy / d3.dx * begin.x;\n\n          var _xi = -_yi2 / (d3.dy / d3.dx);\n\n          pi1 = {\n            x: _xi,\n            y: _yi2\n          };\n          pi2 = {\n            x: pi1.x + canvasSize.width,\n            y: pi1.y + canvasSize.height\n          };\n        }\n      }\n    }\n\n    if (pi1 && pi2) {\n      drawLine(context, begin, pi1);\n      drawLine(context, end, pi2);\n      drawn = true;\n    }\n  }\n\n  if (!drawn) {\n    return;\n  }\n\n  context.lineWidth = width;\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\n\n  if (shadow.enable) {\n    var shadowColor = ColorUtils_1.colorToRgb(shadow.color);\n\n    if (shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\n    }\n  }\n\n  context.stroke();\n}\n\nexports.drawLinkLine = _drawLinkLine;\n\nfunction _drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n  drawTriangle(context, pos1, pos2, pos3);\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  context.fillStyle = ColorUtils_1.getStyleFromRgb(colorTriangle, opacityTriangle);\n  context.fill();\n}\n\nexports.drawLinkTriangle = _drawLinkTriangle;\n\nfunction _drawConnectLine(context, width, lineStyle, begin, end) {\n  context.save();\n  drawLine(context, begin, end);\n  context.lineWidth = width;\n  context.strokeStyle = lineStyle;\n  context.stroke();\n  context.restore();\n}\n\nexports.drawConnectLine = _drawConnectLine;\n\nfunction _gradient(context, p1, p2, opacity) {\n  var gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n  var color1 = p1.getFillColor();\n  var color2 = p2.getFillColor();\n\n  if (!color1 || !color2) {\n    return;\n  }\n\n  var sourcePos = p1.getPosition();\n  var destPos = p2.getPosition();\n  var midRgb = ColorUtils_1.colorMix(color1, color2, p1.getRadius(), p2.getRadius());\n  var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(0, ColorUtils_1.getStyleFromHsl(color1, opacity));\n  grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.getStyleFromRgb(midRgb, opacity));\n  grad.addColorStop(1, ColorUtils_1.getStyleFromHsl(color2, opacity));\n  return grad;\n}\n\nexports.gradient = _gradient;\n\nfunction _drawGrabLine(context, width, begin, end, colorLine, opacity) {\n  context.save();\n  drawLine(context, begin, end);\n  context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\n  context.lineWidth = width;\n  context.stroke();\n  context.restore();\n}\n\nexports.drawGrabLine = _drawGrabLine;\n\nfunction _drawLight(container, context, mousePos) {\n  var lightOptions = container.actualOptions.interactivity.modes.light.area;\n  context.beginPath();\n  context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\n  var gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\n  var gradient = lightOptions.gradient;\n  var gradientRgb = {\n    start: ColorUtils_1.colorToRgb(gradient.start),\n    stop: ColorUtils_1.colorToRgb(gradient.stop)\n  };\n\n  if (!gradientRgb.start || !gradientRgb.stop) {\n    return;\n  }\n\n  gradientAmbientLight.addColorStop(0, ColorUtils_1.getStyleFromRgb(gradientRgb.start));\n  gradientAmbientLight.addColorStop(1, ColorUtils_1.getStyleFromRgb(gradientRgb.stop));\n  context.fillStyle = gradientAmbientLight;\n  context.fill();\n}\n\nexports.drawLight = _drawLight;\n\nfunction _drawParticleShadow(container, context, particle, mousePos) {\n  var pos = particle.getPosition();\n  var shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\n  context.save();\n  var radius = particle.getRadius();\n  var sides = particle.sides;\n  var full = Math.PI * 2 / sides;\n  var angle = -particle.rotate.value + Math.PI / 4;\n  var factor = 1;\n  var dots = [];\n\n  for (var i = 0; i < sides; i++) {\n    dots.push({\n      x: pos.x + radius * Math.sin(angle + full * i) * factor,\n      y: pos.y + radius * Math.cos(angle + full * i) * factor\n    });\n  }\n\n  var points = [];\n  var shadowLength = shadowOptions.length;\n\n  for (var _i = 0, _dots = dots; _i < _dots.length; _i++) {\n    var dot = _dots[_i];\n    var dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\n    var endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\n    var endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\n    points.push({\n      endX: endX,\n      endY: endY,\n      startX: dot.x,\n      startY: dot.y\n    });\n  }\n\n  var shadowRgb = ColorUtils_1.colorToRgb(shadowOptions.color);\n\n  if (!shadowRgb) {\n    return;\n  }\n\n  var shadowColor = ColorUtils_1.getStyleFromRgb(shadowRgb);\n\n  for (var _i2 = points.length - 1; _i2 >= 0; _i2--) {\n    var n = _i2 == points.length - 1 ? 0 : _i2 + 1;\n    context.beginPath();\n    context.moveTo(points[_i2].startX, points[_i2].startY);\n    context.lineTo(points[n].startX, points[n].startY);\n    context.lineTo(points[n].endX, points[n].endY);\n    context.lineTo(points[_i2].endX, points[_i2].endY);\n    context.fillStyle = shadowColor;\n    context.fill();\n  }\n\n  context.restore();\n}\n\nexports.drawParticleShadow = _drawParticleShadow;\n\nfunction _drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n  var pos = particle.getPosition();\n  var tiltOptions = particle.options.tilt;\n  var rollOptions = particle.options.roll;\n  context.save();\n\n  if (tiltOptions.enable || rollOptions.enable) {\n    context.setTransform(rollOptions.enable ? Math.cos(particle.rollAngle) : 1, tiltOptions.enable ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tiltOptions.enable ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollOptions.enable ? Math.sin(particle.rollAngle) : 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  context.beginPath();\n  var angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  var shadowColor = particle.shadowColor;\n\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n\n  if (fillColorValue) {\n    context.fillStyle = fillColorValue;\n  }\n\n  var stroke = particle.stroke;\n  context.lineWidth = particle.strokeWidth;\n\n  if (strokeColorValue) {\n    context.strokeStyle = strokeColorValue;\n  }\n\n  _drawShape(container, context, particle, radius, opacity, delta);\n\n  if (stroke.width > 0) {\n    context.stroke();\n  }\n\n  if (particle.close) {\n    context.closePath();\n  }\n\n  if (particle.fill) {\n    context.fill();\n  }\n\n  context.restore();\n  context.save();\n\n  if (tiltOptions.enable) {\n    context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  _drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n\n  context.restore();\n}\n\nexports.drawParticle = _drawParticle;\n\nfunction _drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  var drawer = container.drawers.get(particle.shape);\n\n  if (!drawer) {\n    return;\n  }\n\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\n\nexports.drawShape = _drawShape;\n\nfunction _drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  var drawer = container.drawers.get(particle.shape);\n\n  if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n    return;\n  }\n\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\n\nexports.drawShapeAfterEffect = _drawShapeAfterEffect;\n\nfunction _drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n\n  context.save();\n  plugin.draw(context, delta);\n  context.restore();\n}\n\nexports.drawPlugin = _drawPlugin;\n\nvar CanvasUtils = /*#__PURE__*/function () {\n  function CanvasUtils() {\n    _classCallCheck(this, CanvasUtils);\n  }\n\n  _createClass(CanvasUtils, null, [{\n    key: \"paintBase\",\n    value: function paintBase(context, dimension, baseColor) {\n      _paintBase(context, dimension, baseColor);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(context, dimension) {\n      _clear(context, dimension);\n    }\n  }, {\n    key: \"drawLinkLine\",\n    value: function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n      _drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow);\n    }\n  }, {\n    key: \"drawLinkTriangle\",\n    value: function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n      _drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle);\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(context, width, lineStyle, begin, end) {\n      _drawConnectLine(context, width, lineStyle, begin, end);\n    }\n  }, {\n    key: \"gradient\",\n    value: function gradient(context, p1, p2, opacity) {\n      return _gradient(context, p1, p2, opacity);\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n      _drawGrabLine(context, width, begin, end, colorLine, opacity);\n    }\n  }, {\n    key: \"drawLight\",\n    value: function drawLight(container, context, mousePos) {\n      _drawLight(container, context, mousePos);\n    }\n  }, {\n    key: \"drawParticleShadow\",\n    value: function drawParticleShadow(container, context, particle, mousePos) {\n      _drawParticleShadow(container, context, particle, mousePos);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n      _drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow);\n    }\n  }, {\n    key: \"drawShape\",\n    value: function drawShape(container, context, particle, radius, opacity, delta) {\n      _drawShape(container, context, particle, radius, opacity, delta);\n    }\n  }, {\n    key: \"drawShapeAfterEffect\",\n    value: function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n      _drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(context, plugin, delta) {\n      _drawPlugin(context, plugin, delta);\n    }\n  }]);\n\n  return CanvasUtils;\n}();\n\nexports.CanvasUtils = CanvasUtils;","map":{"version":3,"sources":["C:/Users/maryem/Desktop/test/maryemsportfolio/node_modules/tsparticles/Utils/CanvasUtils.js"],"names":["Object","defineProperty","exports","value","CanvasUtils","drawPlugin","drawShapeAfterEffect","drawShape","drawParticle","drawParticleShadow","drawLight","drawGrabLine","gradient","drawConnectLine","drawLinkTriangle","drawLinkLine","clear","paintBase","NumberUtils_1","require","ColorUtils_1","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clearRect","maxDistance","canvasSize","warp","backgroundMask","composite","colorLine","opacity","shadow","drawn","getDistance","pi1","pi2","endNE","d1","getDistances","distance","yi","dy","dx","endSW","d2","xi","endSE","d3","lineWidth","globalCompositeOperation","strokeStyle","getStyleFromRgb","enable","shadowColor","colorToRgb","color","shadowBlur","blur","stroke","pos1","pos2","pos3","colorTriangle","opacityTriangle","fill","lineStyle","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","colorMix","grad","createLinearGradient","addColorStop","getStyleFromHsl","container","mousePos","lightOptions","actualOptions","interactivity","modes","light","area","arc","radius","PI","gradientAmbientLight","createRadialGradient","gradientRgb","start","stop","particle","pos","shadowOptions","sides","full","angle","rotate","factor","dots","i","push","sin","cos","points","shadowLength","length","dot","dotAngle","atan2","endX","endY","startX","startY","shadowRgb","n","delta","fillColorValue","strokeColorValue","tiltOptions","options","tilt","rollOptions","roll","setTransform","rollAngle","cosDirection","sinDirection","translate","path","velocity","shadowOffsetX","offset","shadowOffsetY","strokeWidth","close","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","plugin"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasUtils = exports.drawPlugin = exports.drawShapeAfterEffect = exports.drawShape = exports.drawParticle = exports.drawParticleShadow = exports.drawLight = exports.drawGrabLine = exports.gradient = exports.drawConnectLine = exports.drawLinkTriangle = exports.drawLinkLine = exports.clear = exports.paintBase = void 0;\r\nconst NumberUtils_1 = require(\"./NumberUtils\");\r\nconst ColorUtils_1 = require(\"./ColorUtils\");\r\nfunction drawLine(context, begin, end) {\r\n    context.beginPath();\r\n    context.moveTo(begin.x, begin.y);\r\n    context.lineTo(end.x, end.y);\r\n    context.closePath();\r\n}\r\nfunction drawTriangle(context, p1, p2, p3) {\r\n    context.beginPath();\r\n    context.moveTo(p1.x, p1.y);\r\n    context.lineTo(p2.x, p2.y);\r\n    context.lineTo(p3.x, p3.y);\r\n    context.closePath();\r\n}\r\nfunction paintBase(context, dimension, baseColor) {\r\n    context.save();\r\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\r\n    context.fillRect(0, 0, dimension.width, dimension.height);\r\n    context.restore();\r\n}\r\nexports.paintBase = paintBase;\r\nfunction clear(context, dimension) {\r\n    context.clearRect(0, 0, dimension.width, dimension.height);\r\n}\r\nexports.clear = clear;\r\nfunction drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\r\n    let drawn = false;\r\n    if (NumberUtils_1.getDistance(begin, end) <= maxDistance) {\r\n        drawLine(context, begin, end);\r\n        drawn = true;\r\n    }\r\n    else if (warp) {\r\n        let pi1;\r\n        let pi2;\r\n        const endNE = {\r\n            x: end.x - canvasSize.width,\r\n            y: end.y,\r\n        };\r\n        const d1 = NumberUtils_1.getDistances(begin, endNE);\r\n        if (d1.distance <= maxDistance) {\r\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\r\n            pi1 = { x: 0, y: yi };\r\n            pi2 = { x: canvasSize.width, y: yi };\r\n        }\r\n        else {\r\n            const endSW = {\r\n                x: end.x,\r\n                y: end.y - canvasSize.height,\r\n            };\r\n            const d2 = NumberUtils_1.getDistances(begin, endSW);\r\n            if (d2.distance <= maxDistance) {\r\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\r\n                const xi = -yi / (d2.dy / d2.dx);\r\n                pi1 = { x: xi, y: 0 };\r\n                pi2 = { x: xi, y: canvasSize.height };\r\n            }\r\n            else {\r\n                const endSE = {\r\n                    x: end.x - canvasSize.width,\r\n                    y: end.y - canvasSize.height,\r\n                };\r\n                const d3 = NumberUtils_1.getDistances(begin, endSE);\r\n                if (d3.distance <= maxDistance) {\r\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\r\n                    const xi = -yi / (d3.dy / d3.dx);\r\n                    pi1 = { x: xi, y: yi };\r\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\r\n                }\r\n            }\r\n        }\r\n        if (pi1 && pi2) {\r\n            drawLine(context, begin, pi1);\r\n            drawLine(context, end, pi2);\r\n            drawn = true;\r\n        }\r\n    }\r\n    if (!drawn) {\r\n        return;\r\n    }\r\n    context.lineWidth = width;\r\n    if (backgroundMask) {\r\n        context.globalCompositeOperation = composite;\r\n    }\r\n    context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\r\n    if (shadow.enable) {\r\n        const shadowColor = ColorUtils_1.colorToRgb(shadow.color);\r\n        if (shadowColor) {\r\n            context.shadowBlur = shadow.blur;\r\n            context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\r\n        }\r\n    }\r\n    context.stroke();\r\n}\r\nexports.drawLinkLine = drawLinkLine;\r\nfunction drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\r\n    drawTriangle(context, pos1, pos2, pos3);\r\n    if (backgroundMask) {\r\n        context.globalCompositeOperation = composite;\r\n    }\r\n    context.fillStyle = ColorUtils_1.getStyleFromRgb(colorTriangle, opacityTriangle);\r\n    context.fill();\r\n}\r\nexports.drawLinkTriangle = drawLinkTriangle;\r\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\r\n    context.save();\r\n    drawLine(context, begin, end);\r\n    context.lineWidth = width;\r\n    context.strokeStyle = lineStyle;\r\n    context.stroke();\r\n    context.restore();\r\n}\r\nexports.drawConnectLine = drawConnectLine;\r\nfunction gradient(context, p1, p2, opacity) {\r\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\r\n    const color1 = p1.getFillColor();\r\n    const color2 = p2.getFillColor();\r\n    if (!color1 || !color2) {\r\n        return;\r\n    }\r\n    const sourcePos = p1.getPosition();\r\n    const destPos = p2.getPosition();\r\n    const midRgb = ColorUtils_1.colorMix(color1, color2, p1.getRadius(), p2.getRadius());\r\n    const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\r\n    grad.addColorStop(0, ColorUtils_1.getStyleFromHsl(color1, opacity));\r\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.getStyleFromRgb(midRgb, opacity));\r\n    grad.addColorStop(1, ColorUtils_1.getStyleFromHsl(color2, opacity));\r\n    return grad;\r\n}\r\nexports.gradient = gradient;\r\nfunction drawGrabLine(context, width, begin, end, colorLine, opacity) {\r\n    context.save();\r\n    drawLine(context, begin, end);\r\n    context.strokeStyle = ColorUtils_1.getStyleFromRgb(colorLine, opacity);\r\n    context.lineWidth = width;\r\n    context.stroke();\r\n    context.restore();\r\n}\r\nexports.drawGrabLine = drawGrabLine;\r\nfunction drawLight(container, context, mousePos) {\r\n    const lightOptions = container.actualOptions.interactivity.modes.light.area;\r\n    context.beginPath();\r\n    context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\r\n    const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\r\n    const gradient = lightOptions.gradient;\r\n    const gradientRgb = {\r\n        start: ColorUtils_1.colorToRgb(gradient.start),\r\n        stop: ColorUtils_1.colorToRgb(gradient.stop),\r\n    };\r\n    if (!gradientRgb.start || !gradientRgb.stop) {\r\n        return;\r\n    }\r\n    gradientAmbientLight.addColorStop(0, ColorUtils_1.getStyleFromRgb(gradientRgb.start));\r\n    gradientAmbientLight.addColorStop(1, ColorUtils_1.getStyleFromRgb(gradientRgb.stop));\r\n    context.fillStyle = gradientAmbientLight;\r\n    context.fill();\r\n}\r\nexports.drawLight = drawLight;\r\nfunction drawParticleShadow(container, context, particle, mousePos) {\r\n    const pos = particle.getPosition();\r\n    const shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\r\n    context.save();\r\n    const radius = particle.getRadius();\r\n    const sides = particle.sides;\r\n    const full = (Math.PI * 2) / sides;\r\n    const angle = -particle.rotate.value + Math.PI / 4;\r\n    const factor = 1;\r\n    const dots = [];\r\n    for (let i = 0; i < sides; i++) {\r\n        dots.push({\r\n            x: pos.x + radius * Math.sin(angle + full * i) * factor,\r\n            y: pos.y + radius * Math.cos(angle + full * i) * factor,\r\n        });\r\n    }\r\n    const points = [];\r\n    const shadowLength = shadowOptions.length;\r\n    for (const dot of dots) {\r\n        const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\r\n        const endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\r\n        const endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\r\n        points.push({\r\n            endX: endX,\r\n            endY: endY,\r\n            startX: dot.x,\r\n            startY: dot.y,\r\n        });\r\n    }\r\n    const shadowRgb = ColorUtils_1.colorToRgb(shadowOptions.color);\r\n    if (!shadowRgb) {\r\n        return;\r\n    }\r\n    const shadowColor = ColorUtils_1.getStyleFromRgb(shadowRgb);\r\n    for (let i = points.length - 1; i >= 0; i--) {\r\n        const n = i == points.length - 1 ? 0 : i + 1;\r\n        context.beginPath();\r\n        context.moveTo(points[i].startX, points[i].startY);\r\n        context.lineTo(points[n].startX, points[n].startY);\r\n        context.lineTo(points[n].endX, points[n].endY);\r\n        context.lineTo(points[i].endX, points[i].endY);\r\n        context.fillStyle = shadowColor;\r\n        context.fill();\r\n    }\r\n    context.restore();\r\n}\r\nexports.drawParticleShadow = drawParticleShadow;\r\nfunction drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\r\n    const pos = particle.getPosition();\r\n    const tiltOptions = particle.options.tilt;\r\n    const rollOptions = particle.options.roll;\r\n    context.save();\r\n    if (tiltOptions.enable || rollOptions.enable) {\r\n        context.setTransform(rollOptions.enable ? Math.cos(particle.rollAngle) : 1, tiltOptions.enable ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tiltOptions.enable ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollOptions.enable ? Math.sin(particle.rollAngle) : 1, pos.x, pos.y);\r\n    }\r\n    else {\r\n        context.translate(pos.x, pos.y);\r\n    }\r\n    context.beginPath();\r\n    const angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\r\n    if (angle !== 0) {\r\n        context.rotate(angle);\r\n    }\r\n    if (backgroundMask) {\r\n        context.globalCompositeOperation = composite;\r\n    }\r\n    const shadowColor = particle.shadowColor;\r\n    if (shadow.enable && shadowColor) {\r\n        context.shadowBlur = shadow.blur;\r\n        context.shadowColor = ColorUtils_1.getStyleFromRgb(shadowColor);\r\n        context.shadowOffsetX = shadow.offset.x;\r\n        context.shadowOffsetY = shadow.offset.y;\r\n    }\r\n    if (fillColorValue) {\r\n        context.fillStyle = fillColorValue;\r\n    }\r\n    const stroke = particle.stroke;\r\n    context.lineWidth = particle.strokeWidth;\r\n    if (strokeColorValue) {\r\n        context.strokeStyle = strokeColorValue;\r\n    }\r\n    drawShape(container, context, particle, radius, opacity, delta);\r\n    if (stroke.width > 0) {\r\n        context.stroke();\r\n    }\r\n    if (particle.close) {\r\n        context.closePath();\r\n    }\r\n    if (particle.fill) {\r\n        context.fill();\r\n    }\r\n    context.restore();\r\n    context.save();\r\n    if (tiltOptions.enable) {\r\n        context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\r\n    }\r\n    else {\r\n        context.translate(pos.x, pos.y);\r\n    }\r\n    if (angle !== 0) {\r\n        context.rotate(angle);\r\n    }\r\n    if (backgroundMask) {\r\n        context.globalCompositeOperation = composite;\r\n    }\r\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\r\n    context.restore();\r\n}\r\nexports.drawParticle = drawParticle;\r\nfunction drawShape(container, context, particle, radius, opacity, delta) {\r\n    if (!particle.shape) {\r\n        return;\r\n    }\r\n    const drawer = container.drawers.get(particle.shape);\r\n    if (!drawer) {\r\n        return;\r\n    }\r\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\r\n}\r\nexports.drawShape = drawShape;\r\nfunction drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\r\n    if (!particle.shape) {\r\n        return;\r\n    }\r\n    const drawer = container.drawers.get(particle.shape);\r\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\r\n        return;\r\n    }\r\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\r\n}\r\nexports.drawShapeAfterEffect = drawShapeAfterEffect;\r\nfunction drawPlugin(context, plugin, delta) {\r\n    if (!plugin.draw) {\r\n        return;\r\n    }\r\n    context.save();\r\n    plugin.draw(context, delta);\r\n    context.restore();\r\n}\r\nexports.drawPlugin = drawPlugin;\r\nclass CanvasUtils {\r\n    static paintBase(context, dimension, baseColor) {\r\n        paintBase(context, dimension, baseColor);\r\n    }\r\n    static clear(context, dimension) {\r\n        clear(context, dimension);\r\n    }\r\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\r\n        drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow);\r\n    }\r\n    static drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\r\n        drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle);\r\n    }\r\n    static drawConnectLine(context, width, lineStyle, begin, end) {\r\n        drawConnectLine(context, width, lineStyle, begin, end);\r\n    }\r\n    static gradient(context, p1, p2, opacity) {\r\n        return gradient(context, p1, p2, opacity);\r\n    }\r\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\r\n        drawGrabLine(context, width, begin, end, colorLine, opacity);\r\n    }\r\n    static drawLight(container, context, mousePos) {\r\n        drawLight(container, context, mousePos);\r\n    }\r\n    static drawParticleShadow(container, context, particle, mousePos) {\r\n        drawParticleShadow(container, context, particle, mousePos);\r\n    }\r\n    static drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\r\n        drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow);\r\n    }\r\n    static drawShape(container, context, particle, radius, opacity, delta) {\r\n        drawShape(container, context, particle, radius, opacity, delta);\r\n    }\r\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\r\n        drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\r\n    }\r\n    static drawPlugin(context, plugin, delta) {\r\n        drawPlugin(context, plugin, delta);\r\n    }\r\n}\r\nexports.CanvasUtils = CanvasUtils;\r\n"]},"metadata":{},"sourceType":"script"}